# 利用nginx http_limit_req模块实现访问限速，针对多条件进行组合限制
# 利用 geo、map模块实现限速白名单  
# 注意：geo模块中变量不能有下划线，否则map取会出错
# 如下面配置汇总，$whiteip如果写成$white_ip，则之后所有map
# 块中拿到的值总是为1，无论geo模块中条件如何配置
# 白名单原理是在nginx的限速模块中，对于key值为空的情况不会进行限制
# 因此获取不需要限速的ip，将对应限速key置为空即可实现白名单功能
http {

   geo $whiteip {
	    default 0;
	    127.0.0.1 1;
	    10.10.6.0/24 1;
	    10.10.8.0/24 1;
	    10.10.10.0/24 1;
	   }

	map $whiteip $limit_binary_remote_addr {
	    0 $binary_remote_addr;
	    1 "";    

	}

	map $white_ip $limit_x_forward_for {
		0 $proxy_add_x_forwarded_for;
		1 "";
	}

	map $whiteip $limit_server_name {
	    0 $server_name;
	    1 "";
	}

	map $whiteip $limit_uri {
	    0 $uri;
	    1 "";
	}

	limit_req_status 403;
    # 不同的条件进行组合限制
	limit_req_zone $limit_x_forward_for$limit_server_name zone=three:10m rate=20r/s; # 前端有反向代理的情况下使用客户端ip限制
	limit_req_zone $limit_binary_remote_addr$limit_server_name zone=one:10m rate=20r/s;
    limit_req_zone $limit_binary_remote_addr$limit_uri zone=two:10m rate=3r/s;
    limit_req_zone $limit_binary_remote_addr$limit_server_name zone=webo:1000m rate=100r/s;
    limit_req_zone $limit_binary_remote_addr$limit_uri zone=webt:1000m rate=30r/s;

}

server {
	limit_req zone=three burst=1 nodelay;
}
